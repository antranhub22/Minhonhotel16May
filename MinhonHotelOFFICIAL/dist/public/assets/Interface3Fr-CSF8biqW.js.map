{"version":3,"file":"Interface3Fr-CSF8biqW.js","sources":["../../../client/src/components/Interface3Fr.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useAssistant } from '../context/AssistantContext';\nimport { ServiceRequest } from '../types';\nimport { t } from '../i18n';\n\ninterface Interface3FrProps {\n  isActive: boolean;\n}\n\nconst Interface3Fr: React.FC<Interface3FrProps> = ({ isActive }) => {\n  const {\n    callSummary,\n    orderSummary,\n    setCurrentInterface,\n    setOrderSummary,\n    setOrder,\n    serviceRequests,\n    emailSentForCurrentSession,\n    setEmailSentForCurrentSession,\n    callDetails,\n    callDuration,\n    language,\n  } = useAssistant();\n\n  const [note, setNote] = useState('');\n\n  // Handle input changes\n  const handleInputChange = (field: string, value: string | number) => {\n    if (!orderSummary) return;\n    setOrderSummary({\n      ...orderSummary,\n      [field]: value,\n    });\n  };\n\n  // Enhance order items with service request details (optional, similar to Interface3Vi)\n  useEffect(() => {\n    if (isActive && serviceRequests && serviceRequests.length > 0 && orderSummary) {\n      const newItems = serviceRequests.map((request: ServiceRequest, index: number) => {\n        let quantity = 1;\n        let price = 10;\n        if (request.serviceType === 'housekeeping') price = 8;\n        if (request.serviceType === 'technical-support') price = 0;\n        if (request.serviceType.includes('food') || request.serviceType === 'room-service') price = 15;\n        if (request.serviceType === 'wake-up') price = 0;\n        let description = '';\n        const details = request.details;\n        if (details.roomNumber && details.roomNumber !== 'unknown' && details.roomNumber !== 'Not specified')\n          description += `${t('room_number', 'fr')}: ${details.roomNumber}\\n`;\n        if (details.date && details.date !== 'Not specified')\n          description += `${t('time', 'fr')}: ${details.date}\\n`;\n        if (details.time && details.time !== 'Not specified')\n          description += `${t('time', 'fr')}: ${details.time}\\n`;\n        if (details.people) {\n          description += `Nombre de personnes: ${details.people}\\n`;\n        }\n        if (details.location && details.location !== 'Not specified')\n          description += `Lieu: ${details.location}\\n`;\n        if (details.amount && details.amount !== 'Not specified')\n          description += `Montant: ${details.amount}\\n`;\n        description += `\\nDemande: ${request.requestText}`;\n        if (details.otherDetails && details.otherDetails !== 'Not specified' && details.otherDetails !== 'None' && !details.otherDetails.includes('Not specified'))\n          description += `\\n\\nInformations supplémentaires: ${details.otherDetails}`;\n        return {\n          id: (index + 1).toString(),\n          name: request.requestText.length > 60 ? request.requestText.substring(0, 57) + '...' : request.requestText,\n          description: description,\n          quantity: quantity,\n          price: price,\n          serviceType: request.serviceType,\n        };\n      });\n      const uniqueServiceTypes = Array.from(new Set(serviceRequests.map((r) => r.serviceType)));\n      const serviceTypes = uniqueServiceTypes.join(',');\n      let deliveryTime = orderSummary.deliveryTime;\n      if (\n        serviceRequests.some(\n          (r) => r.details && r.details.time && typeof r.details.time === 'string' && r.details.time.toLowerCase().includes('immediate')\n        )\n      ) {\n        deliveryTime = 'asap';\n      }\n      const roomNumberDetail = serviceRequests.find(\n        (r) =>\n          r.details &&\n          r.details.roomNumber &&\n          r.details.roomNumber !== 'unknown' &&\n          r.details.roomNumber !== 'Not specified'\n      )?.details?.roomNumber;\n      setOrderSummary({\n        ...orderSummary,\n        items: newItems,\n        totalAmount: newItems.reduce((sum, item) => sum + item.price * item.quantity, 0),\n        orderType: serviceTypes,\n        roomNumber: roomNumberDetail || orderSummary.roomNumber,\n        deliveryTime: deliveryTime,\n      });\n    }\n  }, [serviceRequests, isActive, orderSummary, setOrderSummary]);\n\n  // Handle confirm order\n  const handleConfirmOrder = async () => {\n    if (!orderSummary) return;\n    const orderReference = `#ORD-${Math.floor(10000 + Math.random() * 90000)}`;\n    setOrder({\n      reference: orderReference,\n      estimatedTime: '15-20 minutes',\n      summary: orderSummary,\n    });\n    if (emailSentForCurrentSession) {\n      setCurrentInterface('interface4');\n      return;\n    }\n    try {\n      const formattedDuration = callDuration\n        ? `${Math.floor(callDuration / 60)}:${(callDuration % 60).toString().padStart(2, '0')}`\n        : '0:00';\n      const generatedCallId = `call-${Date.now()}`;\n      const currentCallId = callDetails?.id || generatedCallId;\n      const emailPayload = {\n        toEmail: 'tuans2@gmail.com',\n        callDetails: {\n          callId: currentCallId,\n          roomNumber: orderSummary.roomNumber || 'À confirmer',\n          summary: callSummary ? callSummary.content : 'Aucun résumé',\n          timestamp: callSummary ? callSummary.timestamp : new Date(),\n          duration: formattedDuration,\n          serviceRequests: orderSummary.items.map((item) => item.name),\n          orderReference: orderReference,\n          note: note,\n        },\n      };\n      setTimeout(async () => {\n        try {\n          const response = await fetch('/api/send-call-summary-email', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(emailPayload),\n            cache: 'no-cache',\n            credentials: 'same-origin',\n          });\n          if (!response.ok) {\n            throw new Error(`Le serveur a répondu avec le statut: ${response.status}`);\n          }\n          await response.json();\n          setEmailSentForCurrentSession(true);\n        } catch (innerError) {\n          console.error('Erreur lors de l\\'envoi de l\\'email:', innerError);\n        }\n      }, 500);\n    } catch (error) {\n      console.error('Erreur lors de l\\'envoi de l\\'email:', error);\n    }\n    setCurrentInterface('interface4');\n  };\n\n  if (!orderSummary) return null;\n\n  return (\n    <div\n      className={`absolute w-full min-h-screen h-full transition-opacity duration-500 ${\n        isActive ? 'opacity-100 active' : 'opacity-0 pointer-events-none'\n      } z-30 overflow-y-auto`}\n      id=\"interface3fr\"\n      data-interface=\"interface3fr\"\n      data-active={isActive.toString()}\n      style={{\n        backgroundImage: 'linear-gradient(rgba(26, 35, 126, 0.7), rgba(63, 81, 181, 0.7))',\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n        fontFamily: 'SF Pro Text, Roboto, Open Sans, Arial, sans-serif',\n      }}\n    >\n      <div className=\"container mx-auto h-full flex flex-col p-2 sm:p-4 md:p-8\">\n        <div className=\"mx-auto w-full max-w-3xl bg-white/90 rounded-2xl shadow-xl p-3 sm:p-6 md:p-10 mb-4 sm:mb-6 flex-grow border border-white/40 backdrop-blur-md\" style={{ minHeight: 420 }}>\n          <div className=\"mb-3 sm:mb-4 pb-2 sm:pb-3 border-b border-gray-200\">\n            <p className=\"font-poppins font-bold text-xl sm:text-2xl text-blue-900 tracking-wide\">{t('order_summary', 'fr')}</p>\n          </div>\n          {/* Résumé généré par l'IA */}\n          <div id=\"summary-container\" className=\"mb-3 sm:mb-4\">\n            {callSummary ? (\n              <div className=\"p-3 sm:p-5 bg-white/80 rounded-xl shadow border border-white/30 mb-3 sm:mb-4 relative\" style={{ backdropFilter: 'blur(2px)' }}>\n                <h3 className=\"font-semibold text-base sm:text-lg mb-1 sm:mb-2 text-blue-800\">{t('summary', 'fr')}</h3>\n                <div className=\"text-xs sm:text-base leading-relaxed text-gray-800 whitespace-pre-line\" style={{ fontWeight: 400 }}>\n                  {(() => {\n                    const lines = (callSummary.content || '').split('\\n');\n                    return lines.map((line, idx) => {\n                      let replaced = line\n                        .replace(/^Room Number:/i, `${t('room_number', 'fr')}:`)\n                        .replace(/^Guest's Name.*:/i, `${t('guest_name', 'fr')}:`)\n                        .replace(/^REQUEST (\\d+):/i, (m, n) => `DEMANDE ${n} :`)\n                        .replace(/^• Service Timing:/i, `• Heure de service :`)\n                        .replace(/^• Order Details:/i, `• Détails de la commande :`)\n                        .replace(/^• Special Requirements:/i, `• Exigences spéciales :`)\n                        .replace(/^Next Step:/i, `Étape suivante :`)\n                        .replace(/Not specified/gi, 'Non spécifié')\n                        .replace(/Details:/gi, 'Détails :')\n                        .replace(/Assistance or reservation for golf activity requested/gi, 'Assistance ou réservation pour une activité de golf demandée');\n                      return <div key={idx}>{replaced}</div>;\n                    });\n                  })()}\n                </div>\n                <div className=\"mt-2 sm:mt-3 flex justify-end\">\n                  <div className=\"text-xs text-gray-500\">\n                    {t('generated_at', 'fr')} {new Date(callSummary.timestamp).toLocaleTimeString()}\n                  </div>\n                </div>\n              </div>\n            ) : null}\n          </div>\n          {/* Notes, numéro de chambre, actions */}\n          <div className=\"flex flex-col md:flex-row items-center gap-3 sm:gap-4 mb-4 sm:mb-6 w-full\">\n            <div className=\"flex items-center space-x-2\">\n              <label className=\"text-xs sm:text-base text-gray-600 font-medium\">{t('room_number', 'fr')}</label>\n              <input\n                type=\"text\"\n                className=\"w-20 sm:w-32 p-2 border border-white/30 rounded-xl focus:ring-2 focus:ring-[#d4af37] focus:border-[#d4af37] bg-white/70 text-gray-900 font-semibold\"\n                value={orderSummary.roomNumber}\n                onChange={(e) => handleInputChange('roomNumber', e.target.value)}\n              />\n            </div>\n            <button\n              className=\"h-full px-3 sm:px-4 bg-white/70 text-blue-900 rounded-full text-xs sm:text-base font-semibold border border-white/30 shadow flex items-center justify-center\"\n              onClick={() => setCurrentInterface('interface3')}\n              style={{ fontFamily: 'inherit', letterSpacing: 0.2 }}\n            >\n              <span className=\"material-icons text-base mr-2\">translate</span>\n              {t('english', 'fr')}\n            </button>\n            <button\n              id=\"confirmOrderButton\"\n              className=\"h-full px-4 sm:px-8 py-2 sm:py-4 bg-[#d4af37] hover:bg-[#ffd700] text-blue-900 font-bold rounded-full shadow-lg text-base sm:text-xl transition-colors border border-white/30 flex items-center justify-center\"\n              onClick={handleConfirmOrder}\n              style={{ fontFamily: 'inherit', letterSpacing: 0.5 }}\n            >\n              <span className=\"material-icons mr-2 text-lg sm:text-2xl\">check_circle</span>\n              {t('send_to_reception', 'fr')}\n            </button>\n          </div>\n          <textarea\n            placeholder={t('enter_notes', 'fr')}\n            className=\"w-full p-2 border border-white/30 rounded-xl text-xs sm:text-sm bg-white/60 focus:bg-white/90 focus:ring-2 focus:ring-[#d4af37] transition italic font-light text-gray-500\"\n            value={note}\n            onChange={(e) => setNote(e.target.value)}\n            rows={3}\n            style={{ fontFamily: 'inherit' }}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Interface3Fr; "],"names":["Interface3Fr","isActive","callSummary","orderSummary","setCurrentInterface","setOrderSummary","setOrder","serviceRequests","emailSentForCurrentSession","setEmailSentForCurrentSession","callDetails","callDuration","language","useAssistant","note","setNote","useState","handleInputChange","field","value","useEffect","newItems","request","index","quantity","price","description","details","t","serviceTypes","r","deliveryTime","roomNumberDetail","_b","_a","sum","item","handleConfirmOrder","orderReference","formattedDuration","generatedCallId","emailPayload","response","innerError","error","jsx","jsxs","line","idx","replaced","m","n","e"],"mappings":"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"}