{"version":3,"file":"Interface3Vi-fkj_qHBx.js","sources":["../../../client/src/components/Interface3Vi.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useAssistant } from '../context/AssistantContext';\nimport { ServiceRequest } from '../types';\n\ninterface Interface3ViProps {\n  isActive: boolean;\n}\n\nconst Interface3Vi: React.FC<Interface3ViProps> = ({ isActive }) => {\n  const { \n    callSummary, \n    orderSummary, \n    setCurrentInterface, \n    setOrderSummary,\n    setOrder,\n    serviceRequests,\n    vietnameseSummary,\n    setVietnameseSummary,\n    translateToVietnamese,\n    emailSentForCurrentSession,\n    setEmailSentForCurrentSession,\n    callDetails,\n    callDuration,\n    language\n  } = useAssistant();\n  \n  const [isTranslating, setIsTranslating] = useState<boolean>(false);\n\n  // Handle input changes\n  const handleInputChange = (field: string, value: string | number) => {\n    if (!orderSummary) return;\n    \n    setOrderSummary({\n      ...orderSummary,\n      [field]: value\n    });\n  };\n\n  // Request Vietnamese translation when component becomes active\n  // Store the call summary id to prevent unnecessary translation requests\n  const [processedSummaryId, setProcessedSummaryId] = useState<string | null>(null);\n  \n  useEffect(() => {\n    // Only translate if:\n    // 1. Component is active\n    // 2. We have a summary\n    // 3. We don't already have a Vietnamese translation OR we have a new summary\n    // 4. We haven't processed this specific summary before (using timestamp as ID)\n    const summaryId = callSummary ? new Date(callSummary.timestamp).getTime().toString() : null;\n    \n    if (\n      isActive && \n      callSummary && \n      (!vietnameseSummary || processedSummaryId !== summaryId) &&\n      summaryId !== processedSummaryId\n    ) {\n      // Update the processed summary id to prevent multiple translations\n      setProcessedSummaryId(summaryId);\n      \n      const translateSummary = async () => {\n        try {\n          console.log('Starting translation of summary to Vietnamese');\n          setIsTranslating(true);\n          await translateToVietnamese(callSummary.content);\n          setIsTranslating(false);\n        } catch (error) {\n          console.error('Error translating summary:', error);\n          setIsTranslating(false);\n        }\n      };\n      \n      translateSummary();\n    }\n  }, [isActive, callSummary, vietnameseSummary, translateToVietnamese, processedSummaryId]);\n\n  // Enhance order items with service request details\n  useEffect(() => {\n    if (isActive && serviceRequests && serviceRequests.length > 0 && orderSummary) {\n      const newItems = serviceRequests.map((request: ServiceRequest, index: number) => {\n        // Default values for items that might not have details\n        let quantity = 1;\n        let price = 10;\n        \n        // Adjust price based on service type\n        if (request.serviceType === 'housekeeping') price = 5;\n        if (request.serviceType === 'technical-support') price = 0;\n        if (request.serviceType.includes('food') || request.serviceType === 'room-service') price = 8;\n        if (request.serviceType === 'wake-up') price = 0;\n        \n        // Construct comprehensive description for the item\n        let description = '';\n        \n        // Add the most important details first\n        const details = request.details;\n        \n        if (details.roomNumber && details.roomNumber !== \"unknown\" && details.roomNumber !== \"Not specified\") \n          description += `Số phòng: ${details.roomNumber}\\n`;\n          \n        if (details.date && details.date !== \"Not specified\") \n          description += `Ngày: ${details.date}\\n`;\n          \n        if (details.time && details.time !== \"Not specified\") \n          description += `Thời gian: ${details.time}\\n`;\n        \n        // Add secondary but still critical information\n        if (details.people) {\n          // people is a number in the type definition, so just use it directly\n          description += `Số người: ${details.people}\\n`;\n        }\n        \n        if (details.location && details.location !== \"Not specified\") \n          description += `Địa điểm: ${details.location}\\n`;\n          \n        if (details.amount && details.amount !== \"Not specified\") \n          description += `Số tiền: ${details.amount}\\n`;\n        \n        // Add the full request details at the end\n        description += `\\nYêu cầu: ${request.requestText}`;\n        \n        // Add any additional details last, but only if they're meaningful\n        if (details.otherDetails && \n            details.otherDetails !== \"Not specified\" && \n            details.otherDetails !== \"None\" &&\n            !details.otherDetails.includes(\"Not specified\"))\n          description += `\\n\\nThông tin thêm: ${details.otherDetails}`;\n        \n        return {\n          id: (index + 1).toString(),\n          name: request.requestText.length > 60 \n            ? request.requestText.substring(0, 57) + '...' \n            : request.requestText,\n          description: description,\n          quantity: quantity,\n          price: price,\n          serviceType: request.serviceType\n        };\n      });\n      \n      // Create a comma-separated list of unique service types\n      const uniqueServiceTypes = Array.from(new Set(serviceRequests.map(r => r.serviceType)));\n      const serviceTypes = uniqueServiceTypes.join(',');\n      \n      // Determine delivery time based on most urgent request\n      let deliveryTime = orderSummary.deliveryTime;\n      if (serviceRequests.some(r => \n          r.details && \n          r.details.time && \n          typeof r.details.time === 'string' && \n          r.details.time.toLowerCase().includes('immediate'))) {\n        deliveryTime = 'asap';\n      }\n      \n      // Get room number if available\n      const roomNumberDetail = serviceRequests.find(r => \n        r.details && \n        r.details.roomNumber && \n        r.details.roomNumber !== \"unknown\" && \n        r.details.roomNumber !== \"Not specified\"\n      )?.details?.roomNumber;\n      \n      // Update order summary with new items and enhanced info\n      setOrderSummary({\n        ...orderSummary,\n        items: newItems,\n        totalAmount: newItems.reduce((sum, item) => sum + (item.price * item.quantity), 0),\n        orderType: serviceTypes, // Update service types from detected categories\n        roomNumber: roomNumberDetail || orderSummary.roomNumber,\n        deliveryTime: deliveryTime // Update delivery time based on detected urgency\n      });\n    }\n  }, [serviceRequests, isActive, orderSummary, setOrderSummary]);\n  \n  // Helper function to get readable service name from service type\n  const getServiceName = (serviceType: string): string => {\n    const typeMap: Record<string, string> = {\n      'room-service': 'Dịch vụ phòng',\n      'housekeeping': 'Dịch vụ buồng phòng',\n      'wake-up': 'Cuộc gọi đánh thức',\n      'amenities': 'Tiện nghi bổ sung',\n      'restaurant': 'Đặt chỗ nhà hàng',\n      'spa': 'Dịch vụ Spa',\n      'transportation': 'Phương tiện vận chuyển',\n      'attractions': 'Điểm tham quan địa phương',\n      'tours-activities': 'Tour & hoạt động',\n      'technical-support': 'Hỗ trợ kỹ thuật',\n      'concierge': 'Dịch vụ lễ tân',\n      'wellness-fitness': 'Sức khỏe & Thể dục',\n      'security': 'Hỗ trợ an ninh',\n      'special-occasions': 'Dịp đặc biệt',\n      'other': 'Dịch vụ khác'\n    };\n    \n    return typeMap[serviceType] || serviceType.split('-')\n      .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n      .join(' ');\n  };\n\n  // Hàm làm sạch nội dung summary\n  function cleanSummaryContent(content: string): string {\n    return content\n      .split('\\n')\n      .filter(line => !/^Bước tiếp theo:/i.test(line) && !/^Next Step:/i.test(line) && !/Vui lòng nhấn/i.test(line) && !/Please Press Send To Reception/i.test(line))\n      .map(line => line.replace(/\\(dùng cho khách có đặt chỗ xác nhận\\)/i, '').replace(/\\(used for Guest with a confirmed reservation\\)/i, '').replace(/\\(không được chỉ định\\)/i, '').replace(/\\(not specified\\)/i, ''))\n      .join('\\n')\n      .replace(/\\n{3,}/g, '\\n\\n');\n  }\n\n  // Handle confirm order\n  const handleConfirmOrder = async () => {\n    if (!orderSummary) return;\n    // Làm sạch nội dung summary trước khi gửi\n    const summaryContent = vietnameseSummary || (callSummary ? callSummary.content : 'Không có tóm tắt');\n    const cleanedSummary = cleanSummaryContent(summaryContent);\n    // Generate a random order reference\n    const orderReference = `#ORD-${Math.floor(10000 + Math.random() * 90000)}`;\n    // Set order data\n    setOrder({\n      reference: orderReference,\n      estimatedTime: '15-20 phút',\n      summary: orderSummary // Không thêm trường lạ vào OrderSummary\n    });\n    // Check if email has already been sent for this session\n    if (emailSentForCurrentSession) {\n      console.log('Email đã được gửi cho phiên này. Bỏ qua việc gửi email trùng lặp.');\n      setCurrentInterface('interface4');\n      return;\n    }\n    // Send email with the order summary - OK to always send from Vietnamese interface\n    try {\n      console.log('Gửi email với tóm tắt cuộc gọi và yêu cầu dịch vụ từ giao diện tiếng Việt...');\n      // Format call duration if available - more defensive code for mobile\n      const formattedDuration = callDuration ? \n        `${Math.floor(callDuration / 60)}:${(callDuration % 60).toString().padStart(2, '0')}` : \n        '0:00';\n      // Ensure we have a valid callId for both desktop and mobile\n      const generatedCallId = `call-${Date.now()}`;\n      const currentCallId = callDetails?.id || generatedCallId;\n      console.log('Sử dụng callId cho email:', currentCallId);\n      console.log('Nội dung tóm tắt cuộc gọi:', cleanedSummary);\n      console.log('Chuẩn bị payload email...');\n      const emailPayload = {\n        toEmail: 'tuans2@gmail.com', // Default email recipient\n        callDetails: {\n          callId: currentCallId,\n          roomNumber: orderSummary.roomNumber || 'Cần xác nhận',\n          summary: cleanedSummary,\n          timestamp: callSummary ? callSummary.timestamp : new Date(),\n          duration: formattedDuration,\n          serviceRequests: orderSummary.items.map(item => item.name), \n          orderReference: orderReference\n        }\n      };\n      console.log('Payload email đã chuẩn bị:', JSON.stringify(emailPayload));\n      \n      // Use a timeout to ensure the request is properly sent on mobile\n      setTimeout(async () => {\n        try {\n          console.log('Gửi yêu cầu email đến máy chủ...');\n          const response = await fetch('/api/send-call-summary-email', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(emailPayload),\n            // Add cache control headers to prevent caching of request\n            cache: 'no-cache',\n            credentials: 'same-origin',\n          });\n          \n          if (!response.ok) {\n            throw new Error(`Máy chủ phản hồi với trạng thái: ${response.status}`);\n          }\n          \n          const result = await response.json();\n          console.log('Email đã được gửi với xác nhận đơn hàng:', result);\n          \n          // Mark that email has been sent for this session to prevent duplicates\n          setEmailSentForCurrentSession(true);\n        } catch (innerError) {\n          console.error('Không thể gửi email trong timeout:', innerError);\n        }\n      }, 500);\n    } catch (error) {\n      console.error('Không thể gửi email:', error);\n    }\n    \n    // Navigate to confirmation screen\n    setCurrentInterface('interface4');\n  };\n  \n  if (!orderSummary) return null;\n  \n  return (\n    <div className={`absolute w-full min-h-screen h-full transition-opacity duration-500 ${\n      isActive ? 'opacity-100 active' : 'opacity-0 pointer-events-none'\n    } z-30 overflow-y-auto`} id=\"interface3vi\" data-interface=\"interface3vi\" data-active={isActive.toString()} style={{\n      backgroundImage: 'linear-gradient(rgba(85,154,154,0.7), rgba(121, 219, 220, 0.6))',\n      backgroundSize: 'cover',\n      backgroundPosition: 'center',\n      fontFamily: 'SF Pro Text, Roboto, Open Sans, Arial, sans-serif'\n    }}>\n      <div className=\"container mx-auto h-full flex flex-col p-2 sm:p-4 md:p-8\">\n        <div className=\"mx-auto w-full max-w-3xl bg-white/90 rounded-2xl shadow-xl p-3 sm:p-6 md:p-10 mb-4 sm:mb-6 flex-grow border border-white/40 backdrop-blur-md\" style={{minHeight: 420}}>\n          <div className=\"mb-3 sm:mb-4 pb-2 sm:pb-3 border-b border-gray-200\">\n            <p className=\"font-poppins font-bold text-xl sm:text-2xl text-blue-900 tracking-wide\">XEM XÉT & XÁC NHẬN</p>\n          </div>\n          {/* AI-generated Call Summary Container */}\n          <div id=\"summary-container\" className=\"mb-3 sm:mb-4\">\n            {callSummary ? (\n              <div className=\"p-3 sm:p-5 bg-white/80 rounded-xl shadow border border-white/30 mb-3 sm:mb-4 relative\" style={{backdropFilter:'blur(2px)'}}>\n                <h3 className=\"font-semibold text-base sm:text-lg mb-1 sm:mb-2 text-blue-800\">Tóm tắt cuộc trò chuyện</h3>\n                {isTranslating ? (\n                  <div className=\"animate-pulse space-y-2\">\n                    <div className=\"h-2 bg-blue-100 rounded w-3/4\"></div>\n                    <div className=\"h-2 bg-blue-100 rounded w-full\"></div>\n                    <div className=\"h-2 bg-blue-100 rounded w-5/6\"></div>\n                    <div className=\"h-2 bg-blue-100 rounded w-2/3\"></div>\n                    <p className=\"text-blue-400 text-xs sm:text-sm italic\">Đang dịch sang tiếng Việt...</p>\n                  </div>\n                ) : (\n                  <p className=\"text-xs sm:text-base leading-relaxed text-gray-800 whitespace-pre-line\" style={{fontWeight: 400}}>\n                    {vietnameseSummary || callSummary.content}\n                  </p>\n                )}\n                <div className=\"mt-2 sm:mt-3 flex justify-end\">\n                  <div className=\"text-xs text-gray-500\">\n                    Tạo lúc {new Date(callSummary.timestamp).toLocaleTimeString()}\n                  </div>\n                </div>\n              </div>\n            ) : (\n              <div className=\"p-3 sm:p-5 bg-gray-50 rounded-xl shadow border border-dashed border-gray-300 mb-3 sm:mb-4\">\n                <div className=\"animate-pulse flex space-x-2 items-center\">\n                  <div className=\"h-4 w-4 bg-gray-300 rounded-full\"></div>\n                  <div className=\"h-4 bg-gray-300 rounded w-1/4\"></div>\n                </div>\n                <h3 className=\"font-semibold text-base sm:text-lg my-2 text-gray-600\">Đang tạo bản tóm tắt...</h3>\n                <div className=\"space-y-2\">\n                  <div className=\"h-2 bg-gray-200 rounded w-3/4\"></div>\n                  <div className=\"h-2 bg-gray-200 rounded w-full\"></div>\n                  <div className=\"h-2 bg-gray-200 rounded w-5/6\"></div>\n                </div>\n                <p className=\"text-gray-400 italic mt-3\">AI của chúng tôi đang phân tích cuộc trò chuyện và chuẩn bị bản tóm tắt...</p>\n              </div>\n            )}\n          </div>\n          {/* Room Information Section + Action Buttons trên cùng một hàng */}\n          <div className=\"flex flex-col md:flex-row items-center gap-3 sm:gap-4 mb-4 sm:mb-6 w-full\">\n            {/* Số phòng */}\n            <div className=\"flex items-center space-x-2\">\n              <label className=\"text-xs sm:text-base text-gray-600 font-medium\">Số phòng</label>\n              <input\n                type=\"text\"\n                className=\"w-20 sm:w-32 p-2 border border-white/30 rounded-xl focus:ring-2 focus:ring-[#d4af37] focus:border-[#d4af37] bg-white/70 text-gray-900 font-semibold\"\n                value={orderSummary.roomNumber}\n                onChange={(e) => handleInputChange('roomNumber', e.target.value)}\n              />\n            </div>\n            {/* Nút Tiếng Anh */}\n            <button \n              className=\"h-full px-3 sm:px-4 bg-white/70 text-blue-900 rounded-full text-xs sm:text-base font-semibold border border-white/30 shadow flex items-center justify-center\" \n              onClick={() => setCurrentInterface('interface3')}\n              style={{fontFamily:'inherit', letterSpacing:0.2}}>\n              <span className=\"material-icons text-base mr-2\">translate</span>\n              Tiếng Anh\n            </button>\n            {/* Nút Xác nhận */}\n            <button \n              id=\"confirmOrderButton\" \n              className=\"h-full px-4 sm:px-8 py-2 sm:py-4 bg-[#d4af37] hover:bg-[#ffd700] text-blue-900 font-bold rounded-full shadow-lg text-base sm:text-xl transition-colors border border-white/30 flex items-center justify-center\"\n              onClick={handleConfirmOrder}\n              style={{fontFamily:'inherit', letterSpacing:0.5}}>\n              <span className=\"material-icons mr-2 text-lg sm:text-2xl\">check_circle</span>\n              Xác nhận\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Interface3Vi;"],"names":["Interface3Vi","isActive","callSummary","orderSummary","setCurrentInterface","setOrderSummary","setOrder","serviceRequests","vietnameseSummary","setVietnameseSummary","translateToVietnamese","emailSentForCurrentSession","setEmailSentForCurrentSession","callDetails","callDuration","language","useAssistant","isTranslating","setIsTranslating","useState","handleInputChange","field","value","processedSummaryId","setProcessedSummaryId","useEffect","summaryId","error","newItems","request","index","quantity","price","description","details","serviceTypes","r","deliveryTime","roomNumberDetail","_b","_a","sum","item","cleanSummaryContent","content","line","handleConfirmOrder","summaryContent","cleanedSummary","orderReference","formattedDuration","generatedCallId","currentCallId","emailPayload","response","result","innerError","jsx","jsxs","e"],"mappings":"y+BAQA,MAAMA,GAA4C,CAAC,CAAE,SAAAC,KAAe,CAC5D,KAAA,CACJ,YAAAC,EACA,aAAAC,EACA,oBAAAC,EACA,gBAAAC,EACA,SAAAC,EACA,gBAAAC,EACA,kBAAAC,EACA,qBAAAC,EACA,sBAAAC,EACA,2BAAAC,EACA,8BAAAC,EACA,YAAAC,EACA,aAAAC,EACA,SAAAC,GACEC,EAAa,EAEX,CAACC,EAAeC,CAAgB,EAAIC,EAAAA,SAAkB,EAAK,EAG3DC,EAAoB,CAACC,EAAeC,IAA2B,CAC9DnB,GAEWE,EAAA,CACd,GAAGF,EACH,CAACkB,CAAK,EAAGC,CAAA,CACV,CACH,EAIM,CAACC,EAAoBC,CAAqB,EAAIL,EAAAA,SAAwB,IAAI,EAEhFM,EAAAA,UAAU,IAAM,CAMR,MAAAC,EAAYxB,EAAc,IAAI,KAAKA,EAAY,SAAS,EAAE,QAAA,EAAU,SAAA,EAAa,KAGrFD,GACAC,IACC,CAACM,GAAqBe,IAAuBG,IAC9CA,IAAcH,IAGdC,EAAsBE,CAAS,GAEN,SAAY,CAC/B,GAAA,CACF,QAAQ,IAAI,+CAA+C,EAC3DR,EAAiB,EAAI,EACf,MAAAR,EAAsBR,EAAY,OAAO,EAC/CgB,EAAiB,EAAK,QACfS,EAAO,CACN,QAAA,MAAM,6BAA8BA,CAAK,EACjDT,EAAiB,EAAK,CAAA,CAE1B,GAEiB,EACnB,EACC,CAACjB,EAAUC,EAAaM,EAAmBE,EAAuBa,CAAkB,CAAC,EAGxFE,EAAAA,UAAU,IAAM,SACd,GAAIxB,GAAYM,GAAmBA,EAAgB,OAAS,GAAKJ,EAAc,CAC7E,MAAMyB,EAAWrB,EAAgB,IAAI,CAACsB,EAAyBC,IAAkB,CAE/E,IAAIC,EAAW,EACXC,EAAQ,GAGRH,EAAQ,cAAgB,iBAAwBG,EAAA,GAChDH,EAAQ,cAAgB,sBAA6BG,EAAA,IACrDH,EAAQ,YAAY,SAAS,MAAM,GAAKA,EAAQ,cAAgB,kBAAwBG,EAAA,GACxFH,EAAQ,cAAgB,YAAmBG,EAAA,GAG/C,IAAIC,EAAc,GAGlB,MAAMC,EAAUL,EAAQ,QAExB,OAAIK,EAAQ,YAAcA,EAAQ,aAAe,WAAaA,EAAQ,aAAe,kBACpED,GAAA,aAAaC,EAAQ,UAAU;AAAA,GAE5CA,EAAQ,MAAQA,EAAQ,OAAS,kBACpBD,GAAA,SAASC,EAAQ,IAAI;AAAA,GAElCA,EAAQ,MAAQA,EAAQ,OAAS,kBACpBD,GAAA,cAAcC,EAAQ,IAAI;AAAA,GAGvCA,EAAQ,SAEKD,GAAA,aAAaC,EAAQ,MAAM;AAAA,GAGxCA,EAAQ,UAAYA,EAAQ,WAAa,kBAC5BD,GAAA,aAAaC,EAAQ,QAAQ;AAAA,GAE1CA,EAAQ,QAAUA,EAAQ,SAAW,kBACxBD,GAAA,YAAYC,EAAQ,MAAM;AAAA,GAG5BD,GAAA;AAAA,WAAcJ,EAAQ,WAAW,GAG5CK,EAAQ,cACRA,EAAQ,eAAiB,iBACzBA,EAAQ,eAAiB,QACzB,CAACA,EAAQ,aAAa,SAAS,eAAe,IACjCD,GAAA;AAAA;AAAA,kBAAuBC,EAAQ,YAAY,IAErD,CACL,IAAKJ,EAAQ,GAAG,SAAS,EACzB,KAAMD,EAAQ,YAAY,OAAS,GAC/BA,EAAQ,YAAY,UAAU,EAAG,EAAE,EAAI,MACvCA,EAAQ,YACZ,YAAAI,EACA,SAAAF,EACA,MAAAC,EACA,YAAaH,EAAQ,WACvB,CAAA,CACD,EAIKM,EADqB,MAAM,KAAK,IAAI,IAAI5B,EAAgB,IAAS6B,GAAAA,EAAE,WAAW,CAAC,CAAC,EAC9C,KAAK,GAAG,EAGhD,IAAIC,EAAelC,EAAa,aAC5BI,EAAgB,KAChB6B,GAAAA,EAAE,SACFA,EAAE,QAAQ,MACV,OAAOA,EAAE,QAAQ,MAAS,UAC1BA,EAAE,QAAQ,KAAK,cAAc,SAAS,WAAW,CAAC,IACrCC,EAAA,QAIjB,MAAMC,GAAmBC,GAAAC,EAAAjC,EAAgB,KACvC6B,GAAAA,EAAE,SACFA,EAAE,QAAQ,YACVA,EAAE,QAAQ,aAAe,WACzBA,EAAE,QAAQ,aAAe,mBAJF,YAAAI,EAKtB,UALsB,YAAAD,EAKb,WAGIlC,EAAA,CACd,GAAGF,EACH,MAAOyB,EACP,YAAaA,EAAS,OAAO,CAACa,EAAKC,IAASD,EAAOC,EAAK,MAAQA,EAAK,SAAW,CAAC,EACjF,UAAWP,EACX,WAAYG,GAAoBnC,EAAa,WAC7C,aAAAkC,CAAA,CACD,CAAA,GAEF,CAAC9B,EAAiBN,EAAUE,EAAcE,CAAe,CAAC,EA4B7D,SAASsC,EAAoBC,EAAyB,CAC7C,OAAAA,EACJ,MAAM;AAAA,CAAI,EACV,UAAe,CAAC,oBAAoB,KAAKC,CAAI,GAAK,CAAC,eAAe,KAAKA,CAAI,GAAK,CAAC,iBAAiB,KAAKA,CAAI,GAAK,CAAC,kCAAkC,KAAKA,CAAI,CAAC,EAC7J,IAAIA,GAAQA,EAAK,QAAQ,0CAA2C,EAAE,EAAE,QAAQ,mDAAoD,EAAE,EAAE,QAAQ,2BAA4B,EAAE,EAAE,QAAQ,qBAAsB,EAAE,CAAC,EACjN,KAAK;AAAA,CAAI,EACT,QAAQ,UAAW;AAAA;AAAA,CAAM,CAAA,CAI9B,MAAMC,EAAqB,SAAY,CACrC,GAAI,CAAC3C,EAAc,OAEnB,MAAM4C,EAAiBvC,IAAsBN,EAAcA,EAAY,QAAU,oBAC3E8C,EAAiBL,EAAoBI,CAAc,EAEnDE,EAAiB,QAAQ,KAAK,MAAM,IAAQ,KAAK,OAAA,EAAW,GAAK,CAAC,GAQxE,GANS3C,EAAA,CACP,UAAW2C,EACX,cAAe,aACf,QAAS9C,CAAA,CACV,EAEGQ,EAA4B,CAC9B,QAAQ,IAAI,mEAAmE,EAC/EP,EAAoB,YAAY,EAChC,MAAA,CAGE,GAAA,CACF,QAAQ,IAAI,8EAA8E,EAE1F,MAAM8C,EAAoBpC,EACxB,GAAG,KAAK,MAAMA,EAAe,EAAE,CAAC,KAAKA,EAAe,IAAI,WAAW,SAAS,EAAG,GAAG,CAAC,GACnF,OAEIqC,EAAkB,QAAQ,KAAK,IAAK,CAAA,GACpCC,GAAgBvC,GAAA,YAAAA,EAAa,KAAMsC,EACjC,QAAA,IAAI,4BAA6BC,CAAa,EAC9C,QAAA,IAAI,6BAA8BJ,CAAc,EACxD,QAAQ,IAAI,2BAA2B,EACvC,MAAMK,EAAe,CACnB,QAAS,mBACT,YAAa,CACX,OAAQD,EACR,WAAYjD,EAAa,YAAc,eACvC,QAAS6C,EACT,UAAW9C,EAAcA,EAAY,cAAgB,KACrD,SAAUgD,EACV,gBAAiB/C,EAAa,MAAM,IAAIuC,GAAQA,EAAK,IAAI,EACzD,eAAAO,CAAA,CAEJ,EACA,QAAQ,IAAI,6BAA8B,KAAK,UAAUI,CAAY,CAAC,EAGtE,WAAW,SAAY,CACjB,GAAA,CACF,QAAQ,IAAI,kCAAkC,EACxC,MAAAC,EAAW,MAAM,MAAM,+BAAgC,CAC3D,OAAQ,OACR,QAAS,CACP,eAAgB,kBAClB,EACA,KAAM,KAAK,UAAUD,CAAY,EAEjC,MAAO,WACP,YAAa,aAAA,CACd,EAEG,GAAA,CAACC,EAAS,GACZ,MAAM,IAAI,MAAM,oCAAoCA,EAAS,MAAM,EAAE,EAGjE,MAAAC,EAAS,MAAMD,EAAS,KAAK,EAC3B,QAAA,IAAI,2CAA4CC,CAAM,EAG9D3C,EAA8B,EAAI,QAC3B4C,EAAY,CACX,QAAA,MAAM,qCAAsCA,CAAU,CAAA,GAE/D,GAAG,QACC7B,EAAO,CACN,QAAA,MAAM,uBAAwBA,CAAK,CAAA,CAI7CvB,EAAoB,YAAY,CAClC,EAEI,OAACD,QAGF,MAAI,CAAA,UAAW,uEACdF,EAAW,qBAAuB,+BACpC,wBAAyB,GAAG,eAAe,iBAAe,eAAe,cAAaA,EAAS,WAAY,MAAO,CAChH,gBAAiB,kEACjB,eAAgB,QAChB,mBAAoB,SACpB,WAAY,mDAAA,EAEZ,SAAAwD,EAAAA,IAAC,MAAI,CAAA,UAAU,2DACb,SAAAC,EAAA,KAAC,MAAI,CAAA,UAAU,+IAA+I,MAAO,CAAC,UAAW,GAC/K,EAAA,SAAA,CAACD,EAAAA,IAAA,MAAA,CAAI,UAAU,qDACb,SAAAA,EAAA,IAAC,KAAE,UAAU,yEAAyE,8BAAkB,CAC1G,CAAA,EAECA,EAAA,IAAA,MAAA,CAAI,GAAG,oBAAoB,UAAU,eACnC,SAAAvD,EACEwD,EAAA,KAAA,MAAA,CAAI,UAAU,wFAAwF,MAAO,CAAC,eAAe,WAC5H,EAAA,SAAA,CAACD,EAAA,IAAA,KAAA,CAAG,UAAU,gEAAgE,SAAuB,0BAAA,EACpGxC,EACCyC,EAAA,KAAC,MAAI,CAAA,UAAU,0BACb,SAAA,CAACD,EAAAA,IAAA,MAAA,CAAI,UAAU,+BAAgC,CAAA,EAC/CA,EAAAA,IAAC,MAAI,CAAA,UAAU,gCAAiC,CAAA,EAChDA,EAAAA,IAAC,MAAI,CAAA,UAAU,+BAAgC,CAAA,EAC/CA,EAAAA,IAAC,MAAI,CAAA,UAAU,+BAAgC,CAAA,EAC9CA,EAAA,IAAA,IAAA,CAAE,UAAU,0CAA0C,SAA4B,8BAAA,CAAA,CAAA,CACrF,CAAA,EAEAA,EAAAA,IAAC,IAAE,CAAA,UAAU,yEAAyE,MAAO,CAAC,WAAY,GAAG,EAC1G,SAAqBjD,GAAAN,EAAY,OACpC,CAAA,QAED,MAAI,CAAA,UAAU,gCACb,SAACwD,EAAA,KAAA,MAAA,CAAI,UAAU,wBAAwB,SAAA,CAAA,WAC5B,IAAI,KAAKxD,EAAY,SAAS,EAAE,mBAAmB,CAAA,CAAA,CAC9D,CACF,CAAA,CAAA,CACF,CAAA,EAEAwD,EAAAA,KAAC,MAAI,CAAA,UAAU,4FACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,4CACb,SAAA,CAACD,EAAAA,IAAA,MAAA,CAAI,UAAU,kCAAmC,CAAA,EAClDA,EAAAA,IAAC,MAAI,CAAA,UAAU,+BAAgC,CAAA,CAAA,EACjD,EACCA,EAAA,IAAA,KAAA,CAAG,UAAU,wDAAwD,SAAuB,0BAAA,EAC7FC,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACD,EAAAA,IAAA,MAAA,CAAI,UAAU,+BAAgC,CAAA,EAC/CA,EAAAA,IAAC,MAAI,CAAA,UAAU,gCAAiC,CAAA,EAChDA,EAAAA,IAAC,MAAI,CAAA,UAAU,+BAAgC,CAAA,CAAA,EACjD,EACCA,EAAA,IAAA,IAAA,CAAE,UAAU,4BAA4B,SAA0E,4EAAA,CAAA,CAAA,CAAA,CACrH,CAEJ,CAAA,EAEAC,EAAAA,KAAC,MAAI,CAAA,UAAU,4EAEb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,8BACb,SAAA,CAACD,EAAA,IAAA,QAAA,CAAM,UAAU,iDAAiD,SAAQ,WAAA,EAC1EA,EAAA,IAAC,QAAA,CACC,KAAK,OACL,UAAU,sJACV,MAAOtD,EAAa,WACpB,SAAWwD,GAAMvC,EAAkB,aAAcuC,EAAE,OAAO,KAAK,CAAA,CAAA,CACjE,EACF,EAEAD,EAAA,KAAC,SAAA,CACC,UAAU,+JACV,QAAS,IAAMtD,EAAoB,YAAY,EAC/C,MAAO,CAAC,WAAW,UAAW,cAAc,EAAG,EAC/C,SAAA,CAACqD,EAAA,IAAA,OAAA,CAAK,UAAU,gCAAgC,SAAS,YAAA,EAAO,WAAA,CAAA,CAElE,EAEAC,EAAA,KAAC,SAAA,CACC,GAAG,qBACH,UAAU,iNACV,QAASZ,EACT,MAAO,CAAC,WAAW,UAAW,cAAc,EAAG,EAC/C,SAAA,CAACW,EAAA,IAAA,OAAA,CAAK,UAAU,0CAA0C,SAAY,eAAA,EAAO,UAAA,CAAA,CAAA,CAE/E,CACF,CAAA,CAAA,CACF,CAAA,CACF,CAAA,EACF,EAxFwB,IA0F5B"}