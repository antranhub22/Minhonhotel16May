{"version":3,"mappings":"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","names":["CallHistoryTable","React","__vitePreload","CallHistory","timeframe","setTimeframe","useState","roomFilter","setRoomFilter","data","isLoading","isError","refetch","useQuery","response","formatDate","dateObj","formatDuration","duration","seconds","mins","secs","handleTimeframeChange","hours","filteredSummaries","summary","jsxs","jsx","Link","e","Suspense"],"ignoreList":[],"sources":["../../../client/src/pages/CallHistory.tsx"],"sourcesContent":["import React, { useEffect, useState, Suspense } from 'react';\nimport { useQuery } from '@tanstack/react-query';\nimport { Link } from 'wouter';\nimport { CallSummary } from '@/types';\n\nconst CallHistoryTable = React.lazy(() => import('../components/CallHistoryTable'));\n\nconst CallHistory: React.FC = () => {\n  const [timeframe, setTimeframe] = useState<number>(24);\n  const [roomFilter, setRoomFilter] = useState<string>('');\n  \n  // Query to fetch call summaries from the last 24 hours\n  const { data, isLoading, isError, refetch } = useQuery({\n    queryKey: ['summaries', 'recent', timeframe],\n    queryFn: async () => {\n      const response = await fetch(`/api/summaries/recent/${timeframe}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch recent call summaries');\n      }\n      return response.json();\n    },\n  });\n  \n  // Format date for display\n  const formatDate = (dateObj: Date | string) => {\n    const date = dateObj instanceof Date ? dateObj : new Date(dateObj);\n    return date.toLocaleString('en-US', {\n      year: 'numeric',\n      month: 'numeric',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  \n  // Format call duration for display (accepts \"mm:ss\" or numeric seconds)\n  const formatDuration = (duration: string | undefined) => {\n    if (!duration) return '00:00';\n    // If duration is pure seconds number, format to mm:ss\n    const seconds = parseInt(duration, 10);\n    if (!isNaN(seconds) && /^\\d+$/.test(duration)) {\n      const mins = Math.floor(seconds / 60).toString().padStart(2, '0');\n      const secs = (seconds % 60).toString().padStart(2, '0');\n      return `${mins}:${secs}`;\n    }\n    // If already mm:ss or other format, return as-is\n    return duration;\n  };\n  \n  // Handle timeframe change\n  const handleTimeframeChange = (hours: number) => {\n    setTimeframe(hours);\n  };\n  \n  // Filter summaries by room number if filter is set\n  const filteredSummaries = data?.summaries.filter((summary: CallSummary) => {\n    if (!roomFilter) return true;\n    return summary.roomNumber && summary.roomNumber.toLowerCase().includes(roomFilter.toLowerCase());\n  });\n  \n  return (\n    <div className=\"container mx-auto p-5\">\n      <header className=\"mb-8\">\n        <div className=\"flex items-center justify-between mb-4\">\n          <h1 className=\"text-3xl font-bold text-primary\">Call History</h1>\n          <div className=\"flex space-x-3\">\n            <Link to=\"/\">\n              <button className=\"px-4 py-2 rounded-md bg-gray-200 text-gray-700 hover:bg-gray-300 transition-colors flex items-center\">\n                <span className=\"material-icons align-middle mr-1 text-sm\">home</span>\n                Home\n              </button>\n            </Link>\n            <button \n              onClick={() => refetch()} \n              className=\"px-4 py-2 rounded-md bg-blue-100 text-blue-700 hover:bg-blue-200 transition-colors flex items-center\"\n            >\n              <span className=\"material-icons align-middle mr-1 text-sm\">refresh</span>\n              Refresh\n            </button>\n          </div>\n        </div>\n        \n        <div className=\"bg-white p-4 rounded-lg shadow-sm mb-4\">\n          <div className=\"flex flex-col md:flex-row md:items-center md:justify-between gap-4\">\n            <div className=\"space-y-2\">\n              <h3 className=\"font-medium text-gray-700\">Time Period</h3>\n              <div className=\"flex space-x-2\">\n                <button \n                  onClick={() => handleTimeframeChange(24)} \n                  className={`px-3 py-1 rounded-md ${timeframe === 24 ? 'bg-blue-500 text-white' : 'bg-gray-100 text-gray-600 hover:bg-gray-200'}`}\n                >\n                  24 hours\n                </button>\n                <button \n                  onClick={() => handleTimeframeChange(48)} \n                  className={`px-3 py-1 rounded-md ${timeframe === 48 ? 'bg-blue-500 text-white' : 'bg-gray-100 text-gray-600 hover:bg-gray-200'}`}\n                >\n                  48 hours\n                </button>\n                <button \n                  onClick={() => handleTimeframeChange(72)} \n                  className={`px-3 py-1 rounded-md ${timeframe === 72 ? 'bg-blue-500 text-white' : 'bg-gray-100 text-gray-600 hover:bg-gray-200'}`}\n                >\n                  72 hours\n                </button>\n              </div>\n            </div>\n            \n            <div className=\"space-y-2 md:w-1/3\">\n              <h3 className=\"font-medium text-gray-700\">Filter by Room</h3>\n              <input\n                type=\"text\"\n                placeholder=\"Enter room number...\"\n                value={roomFilter}\n                onChange={(e) => setRoomFilter(e.target.value)}\n                className=\"w-full p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              />\n            </div>\n          </div>\n        </div>\n      </header>\n      \n      <main>\n        {isLoading ? (\n          <div className=\"bg-white p-6 rounded-lg shadow-sm flex justify-center items-center h-64\">\n            <div className=\"flex flex-col items-center\">\n              <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-blue-500 mb-4\"></div>\n              <p className=\"text-gray-500\">Loading call history...</p>\n            </div>\n          </div>\n        ) : isError ? (\n          <div className=\"bg-red-50 p-6 rounded-lg shadow-sm flex justify-center items-center h-64\">\n            <div className=\"flex flex-col items-center text-center\">\n              <span className=\"material-icons text-red-500 text-4xl mb-3\">error_outline</span>\n              <p className=\"text-red-700 mb-2\">Unable to load call history</p>\n              <p className=\"text-red-500 text-sm\">Please try again later or contact administrator.</p>\n              <button \n                onClick={() => refetch()} \n                className=\"mt-4 px-4 py-2 bg-red-100 text-red-700 rounded-md hover:bg-red-200 transition-colors\"\n              >\n                Try Again\n              </button>\n            </div>\n          </div>\n        ) : filteredSummaries?.length ? (\n          <Suspense fallback={<div className=\"bg-white p-6 rounded-lg shadow-sm flex justify-center items-center h-64\">Đang tải bảng...</div>}>\n            <CallHistoryTable\n              filteredSummaries={filteredSummaries}\n              formatDate={formatDate}\n              formatDuration={formatDuration}\n            />\n          </Suspense>\n        ) : (\n          <div className=\"bg-white p-6 rounded-lg shadow-sm flex justify-center items-center h-64\">\n            <div className=\"flex flex-col items-center text-center\">\n              <span className=\"material-icons text-gray-400 text-4xl mb-3\">history</span>\n              <p className=\"text-gray-500 mb-2\">No calls found</p>\n              <p className=\"text-gray-400 text-sm\">\n                {roomFilter \n                  ? `No calls from room \"${roomFilter}\" in the last ${timeframe} hours.` \n                  : `No calls found in the last ${timeframe} hours.`}\n              </p>\n            </div>\n          </div>\n        )}\n      </main>\n      \n      <div className=\"mt-6 text-center text-gray-500 text-sm\">\n        <p>Showing call history from the last {timeframe} hours • Total: {data?.count || 0} calls</p>\n      </div>\n    </div>\n  );\n};\n\nexport default CallHistory;"],"file":"assets/CallHistory-CIRaBg0a.js"}