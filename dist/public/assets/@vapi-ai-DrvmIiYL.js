var A=Object.defineProperty;var O=(i,o,e)=>o in i?A(i,o,{enumerable:!0,configurable:!0,writable:!0,value:e}):i[o]=e;var a=(i,o,e)=>O(i,typeof o!="symbol"?o+"":o,e);import{c as v,r as w}from"./@daily-co-CRt2XSsO.js";import{e as k}from"./events-CXH2uRM3.js";var S={},T={},f={};Object.defineProperty(f,"__esModule",{value:!0});f.Api=f.HttpClient=f.ContentType=void 0;var s;(function(i){i.Json="application/json",i.FormData="multipart/form-data",i.UrlEncoded="application/x-www-form-urlencoded",i.Text="text/plain"})(s||(f.ContentType=s={}));class P{constructor(o={}){a(this,"baseUrl","https://api.vapi.ai");a(this,"securityData",null);a(this,"securityWorker");a(this,"abortControllers",new Map);a(this,"customFetch",(...o)=>fetch(...o));a(this,"baseApiParams",{credentials:"same-origin",headers:{},redirect:"follow",referrerPolicy:"no-referrer"});a(this,"setSecurityData",o=>{this.securityData=o});a(this,"contentFormatters",{[s.Json]:o=>o!==null&&(typeof o=="object"||typeof o=="string")?JSON.stringify(o):o,[s.Text]:o=>o!==null&&typeof o!="string"?JSON.stringify(o):o,[s.FormData]:o=>Object.keys(o||{}).reduce((e,t)=>{const r=o[t];return e.append(t,r instanceof Blob?r:typeof r=="object"&&r!==null?JSON.stringify(r):`${r}`),e},new FormData),[s.UrlEncoded]:o=>this.toQueryString(o)});a(this,"createAbortSignal",o=>{if(this.abortControllers.has(o)){const t=this.abortControllers.get(o);return t?t.signal:void 0}const e=new AbortController;return this.abortControllers.set(o,e),e.signal});a(this,"abortRequest",o=>{const e=this.abortControllers.get(o);e&&(e.abort(),this.abortControllers.delete(o))});a(this,"request",async({body:o,secure:e,path:t,type:r,query:l,format:c,baseUrl:C,cancelToken:m,...q})=>{const u=(typeof e=="boolean"?e:this.baseApiParams.secure)&&this.securityWorker&&await this.securityWorker(this.securityData)||{},p=this.mergeRequestParams(q,u),b=l&&this.toQueryString(l),n=this.contentFormatters[r||s.Json],d=c||p.format;return this.customFetch(`${C||this.baseUrl||""}${t}${b?`?${b}`:""}`,{...p,headers:{...p.headers||{},...r&&r!==s.FormData?{"Content-Type":r}:{}},signal:(m?this.createAbortSignal(m):p.signal)||null,body:typeof o>"u"||o===null?null:n(o)}).then(async y=>{const h=y;h.data=null,h.error=null;const E=d?await y[d]().then(g=>(h.ok?h.data=g:h.error=g,h)).catch(g=>(h.error=g,h)):h;if(m&&this.abortControllers.delete(m),!y.ok)throw E;return E})});Object.assign(this,o)}encodeQueryParam(o,e){return`${encodeURIComponent(o)}=${encodeURIComponent(typeof e=="number"?e:`${e}`)}`}addQueryParam(o,e){return this.encodeQueryParam(e,o[e])}addArrayQueryParam(o,e){return o[e].map(r=>this.encodeQueryParam(e,r)).join("&")}toQueryString(o){const e=o||{};return Object.keys(e).filter(r=>typeof e[r]<"u").map(r=>Array.isArray(e[r])?this.addArrayQueryParam(e,r):this.addQueryParam(e,r)).join("&")}addQueryParams(o){const e=this.toQueryString(o);return e?`?${e}`:""}mergeRequestParams(o,e){return{...this.baseApiParams,...o,...e||{},headers:{...this.baseApiParams.headers||{},...o.headers||{},...e&&e.headers||{}}}}}f.HttpClient=P;class G extends P{constructor(){super(...arguments);a(this,"call",{callControllerCreate:(e,t={})=>this.request({path:"/call",method:"POST",body:e,secure:!0,type:s.Json,format:"json",...t}),callControllerFindAll:(e,t={})=>this.request({path:"/call",method:"GET",query:e,secure:!0,format:"json",...t}),callControllerFindOne:(e,t={})=>this.request({path:`/call/${e}`,method:"GET",secure:!0,format:"json",...t}),callControllerUpdate:(e,t,r={})=>this.request({path:`/call/${e}`,method:"PATCH",body:t,secure:!0,type:s.Json,format:"json",...r}),callControllerDeleteCallData:(e,t={})=>this.request({path:`/call/${e}`,method:"DELETE",secure:!0,format:"json",...t}),callControllerCreatePhoneCall:(e,t={})=>this.request({path:"/call/phone",method:"POST",body:e,secure:!0,type:s.Json,format:"json",...t}),callControllerCreateWebCall:(e,t={})=>this.request({path:"/call/web",method:"POST",body:e,secure:!0,type:s.Json,format:"json",...t})});a(this,"v2",{callControllerFindAllPaginated:(e,t={})=>this.request({path:"/v2/call",method:"GET",query:e,secure:!0,format:"json",...t}),callControllerFindAllMetadataPaginated:(e,t={})=>this.request({path:"/v2/call/metadata",method:"GET",query:e,secure:!0,format:"json",...t}),assistantControllerFindAllPaginated:(e,t={})=>this.request({path:"/v2/assistant",method:"GET",query:e,secure:!0,format:"json",...t}),phoneNumberControllerFindAllPaginated:(e,t={})=>this.request({path:"/v2/phone-number",method:"GET",query:e,secure:!0,format:"json",...t})});a(this,"chat",{chatController:(e={})=>this.request({path:"/chat",method:"POST",secure:!0,format:"json",...e}),chatControllerChatCompletions:(e,t={})=>this.request({path:"/chat/completions",method:"POST",body:e,secure:!0,type:s.Json,format:"json",...t})});a(this,"assistant",{assistantControllerCreate:(e,t={})=>this.request({path:"/assistant",method:"POST",body:e,secure:!0,type:s.Json,format:"json",...t}),assistantControllerFindAll:(e,t={})=>this.request({path:"/assistant",method:"GET",query:e,secure:!0,format:"json",...t}),assistantControllerFindOne:(e,t={})=>this.request({path:`/assistant/${e}`,method:"GET",secure:!0,format:"json",...t}),assistantControllerUpdate:(e,t,r={})=>this.request({path:`/assistant/${e}`,method:"PATCH",body:t,secure:!0,type:s.Json,format:"json",...r}),assistantControllerReplace:(e,t,r={})=>this.request({path:`/assistant/${e}`,method:"PUT",body:t,secure:!0,type:s.Json,format:"json",...r}),assistantControllerRemove:(e,t={})=>this.request({path:`/assistant/${e}`,method:"DELETE",secure:!0,format:"json",...t}),assistantControllerFindVersions:(e,t,r={})=>this.request({path:`/assistant/${e}/version`,method:"GET",query:t,secure:!0,format:"json",...r})});a(this,"phoneNumber",{phoneNumberControllerImportTwilio:(e,t={})=>this.request({path:"/phone-number/import/twilio",method:"POST",body:e,secure:!0,type:s.Json,format:"json",...t}),phoneNumberControllerImportVonage:(e,t={})=>this.request({path:"/phone-number/import/vonage",method:"POST",body:e,secure:!0,type:s.Json,format:"json",...t}),phoneNumberControllerCreate:(e,t={})=>this.request({path:"/phone-number",method:"POST",body:e,secure:!0,type:s.Json,format:"json",...t}),phoneNumberControllerFindAll:(e,t={})=>this.request({path:"/phone-number",method:"GET",query:e,secure:!0,format:"json",...t}),phoneNumberControllerFindOne:(e,t={})=>this.request({path:`/phone-number/${e}`,method:"GET",secure:!0,format:"json",...t}),phoneNumberControllerUpdate:(e,t,r={})=>this.request({path:`/phone-number/${e}`,method:"PATCH",body:t,secure:!0,type:s.Json,format:"json",...r}),phoneNumberControllerRemove:(e,t={})=>this.request({path:`/phone-number/${e}`,method:"DELETE",secure:!0,format:"json",...t})});a(this,"tool",{toolControllerCreate:(e,t={})=>this.request({path:"/tool",method:"POST",body:e,secure:!0,type:s.Json,format:"json",...t}),toolControllerFindAll:(e,t={})=>this.request({path:"/tool",method:"GET",query:e,secure:!0,format:"json",...t}),toolControllerFindOne:(e,t={})=>this.request({path:`/tool/${e}`,method:"GET",secure:!0,format:"json",...t}),toolControllerUpdate:(e,t,r={})=>this.request({path:`/tool/${e}`,method:"PATCH",body:t,secure:!0,type:s.Json,format:"json",...r}),toolControllerRemove:(e,t={})=>this.request({path:`/tool/${e}`,method:"DELETE",secure:!0,format:"json",...t})});a(this,"file",{fileControllerCreateDeprecated:(e,t={})=>this.request({path:"/file/upload",method:"POST",body:e,secure:!0,type:s.FormData,format:"json",...t}),fileControllerCreate:(e,t={})=>this.request({path:"/file",method:"POST",body:e,secure:!0,type:s.FormData,format:"json",...t}),fileControllerFindAll:(e={})=>this.request({path:"/file",method:"GET",secure:!0,format:"json",...e}),fileControllerFindOne:(e,t={})=>this.request({path:`/file/${e}`,method:"GET",secure:!0,format:"json",...t}),fileControllerUpdate:(e,t,r={})=>this.request({path:`/file/${e}`,method:"PATCH",body:t,secure:!0,type:s.Json,format:"json",...r}),fileControllerRemove:(e,t={})=>this.request({path:`/file/${e}`,method:"DELETE",secure:!0,format:"json",...t})});a(this,"knowledgeBase",{knowledgeBaseControllerCreate:(e,t={})=>this.request({path:"/knowledge-base",method:"POST",body:e,secure:!0,type:s.Json,format:"json",...t}),knowledgeBaseControllerFindAll:(e,t={})=>this.request({path:"/knowledge-base",method:"GET",query:e,secure:!0,format:"json",...t}),knowledgeBaseControllerFindOne:(e,t={})=>this.request({path:`/knowledge-base/${e}`,method:"GET",secure:!0,format:"json",...t}),knowledgeBaseControllerUpdate:(e,t,r={})=>this.request({path:`/knowledge-base/${e}`,method:"PATCH",body:t,secure:!0,type:s.Json,format:"json",...r}),knowledgeBaseControllerRemove:(e,t={})=>this.request({path:`/knowledge-base/${e}`,method:"DELETE",secure:!0,format:"json",...t})});a(this,"workflow",{workflowControllerFindAll:(e={})=>this.request({path:"/workflow",method:"GET",secure:!0,format:"json",...e}),workflowControllerCreate:(e,t={})=>this.request({path:"/workflow",method:"POST",body:e,secure:!0,type:s.Json,format:"json",...t}),workflowControllerFindOne:(e,t={})=>this.request({path:`/workflow/${e}`,method:"GET",secure:!0,format:"json",...t}),workflowControllerDelete:(e,t={})=>this.request({path:`/workflow/${e}`,method:"DELETE",secure:!0,format:"json",...t}),workflowControllerUpdate:(e,t,r={})=>this.request({path:`/workflow/${e}`,method:"PATCH",body:t,secure:!0,type:s.Json,format:"json",...r})});a(this,"squad",{squadControllerCreate:(e,t={})=>this.request({path:"/squad",method:"POST",body:e,secure:!0,type:s.Json,format:"json",...t}),squadControllerFindAll:(e,t={})=>this.request({path:"/squad",method:"GET",query:e,secure:!0,format:"json",...t}),squadControllerFindOne:(e,t={})=>this.request({path:`/squad/${e}`,method:"GET",secure:!0,format:"json",...t}),squadControllerUpdate:(e,t,r={})=>this.request({path:`/squad/${e}`,method:"PATCH",body:t,secure:!0,type:s.Json,format:"json",...r}),squadControllerRemove:(e,t={})=>this.request({path:`/squad/${e}`,method:"DELETE",secure:!0,format:"json",...t})});a(this,"testSuite",{testSuiteControllerFindAllPaginated:(e,t={})=>this.request({path:"/test-suite",method:"GET",query:e,secure:!0,format:"json",...t}),testSuiteControllerCreate:(e,t={})=>this.request({path:"/test-suite",method:"POST",body:e,secure:!0,type:s.Json,format:"json",...t}),testSuiteControllerFindOne:(e,t={})=>this.request({path:`/test-suite/${e}`,method:"GET",secure:!0,format:"json",...t}),testSuiteControllerUpdate:(e,t,r={})=>this.request({path:`/test-suite/${e}`,method:"PATCH",body:t,secure:!0,type:s.Json,format:"json",...r}),testSuiteControllerRemove:(e,t={})=>this.request({path:`/test-suite/${e}`,method:"DELETE",secure:!0,format:"json",...t}),testSuiteTestControllerFindAllPaginated:(e,t,r={})=>this.request({path:`/test-suite/${e}/test`,method:"GET",query:t,secure:!0,format:"json",...r}),testSuiteTestControllerCreate:(e,t,r={})=>this.request({path:`/test-suite/${e}/test`,method:"POST",body:t,secure:!0,type:s.Json,format:"json",...r}),testSuiteTestControllerFindOne:(e,t,r={})=>this.request({path:`/test-suite/${e}/test/${t}`,method:"GET",secure:!0,format:"json",...r}),testSuiteTestControllerUpdate:(e,t,r,l={})=>this.request({path:`/test-suite/${e}/test/${t}`,method:"PATCH",body:r,secure:!0,type:s.Json,format:"json",...l}),testSuiteTestControllerRemove:(e,t,r={})=>this.request({path:`/test-suite/${e}/test/${t}`,method:"DELETE",secure:!0,format:"json",...r}),testSuiteRunControllerFindAllPaginated:(e,t,r={})=>this.request({path:`/test-suite/${e}/run`,method:"GET",query:t,secure:!0,format:"json",...r}),testSuiteRunControllerCreate:(e,t,r={})=>this.request({path:`/test-suite/${e}/run`,method:"POST",body:t,secure:!0,type:s.Json,format:"json",...r}),testSuiteRunControllerFindOne:(e,t,r={})=>this.request({path:`/test-suite/${e}/run/${t}`,method:"GET",secure:!0,format:"json",...r}),testSuiteRunControllerUpdate:(e,t,r,l={})=>this.request({path:`/test-suite/${e}/run/${t}`,method:"PATCH",body:r,secure:!0,type:s.Json,format:"json",...l}),testSuiteRunControllerRemove:(e,t,r={})=>this.request({path:`/test-suite/${e}/run/${t}`,method:"DELETE",secure:!0,format:"json",...r})});a(this,"metrics",{analyticsControllerFindAllDeprecated:(e,t={})=>this.request({path:"/metrics",method:"GET",query:e,secure:!0,format:"json",...t})});a(this,"analytics",{analyticsControllerQuery:(e,t={})=>this.request({path:"/analytics",method:"POST",body:e,secure:!0,type:s.Json,format:"json",...t})});a(this,"log",{loggingControllerCallLogsQuery:(e,t={})=>this.request({path:"/log",method:"GET",query:e,secure:!0,format:"json",...t}),loggingControllerCallLogsDeleteQuery:(e,t={})=>this.request({path:"/log",method:"DELETE",query:e,secure:!0,...t})});a(this,"logs",{loggingControllerLogsQuery:(e,t={})=>this.request({path:"/logs",method:"GET",query:e,secure:!0,format:"json",...t}),loggingControllerLogsDeleteQuery:(e,t={})=>this.request({path:"/logs",method:"DELETE",query:e,secure:!0,...t})});a(this,"org",{orgControllerCreate:(e,t={})=>this.request({path:"/org",method:"POST",body:e,secure:!0,type:s.Json,format:"json",...t}),orgControllerFindAll:(e={})=>this.request({path:"/org",method:"GET",secure:!0,format:"json",...e}),orgControllerFindOne:(e,t={})=>this.request({path:`/org/${e}`,method:"GET",secure:!0,format:"json",...t}),orgControllerUpdate:(e,t,r={})=>this.request({path:`/org/${e}`,method:"PATCH",body:t,secure:!0,type:s.Json,format:"json",...r}),orgControllerDeleteOrg:(e,t={})=>this.request({path:`/org/${e}`,method:"DELETE",secure:!0,...t}),orgControllerFindAllUsers:(e,t={})=>this.request({path:`/org/${e}/user`,method:"GET",secure:!0,format:"json",...t}),orgControllerOrgLeave:(e,t={})=>this.request({path:`/org/${e}/leave`,method:"DELETE",secure:!0,...t}),orgControllerOrgRemoveUser:(e,t,r={})=>this.request({path:`/org/${e}/member/${t}/leave`,method:"DELETE",secure:!0,...r}),orgControllerUsersInvite:(e,t,r={})=>this.request({path:`/org/${e}/invite`,method:"POST",body:t,secure:!0,type:s.Json,...r}),orgControllerUserUpdate:(e,t,r={})=>this.request({path:`/org/${e}/role`,method:"PATCH",body:t,secure:!0,type:s.Json,...r}),orgControllerOrgToken:(e,t={})=>this.request({path:`/org/${e}/auth`,method:"GET",secure:!0,format:"json",...t})});a(this,"token",{tokenControllerCreate:(e,t={})=>this.request({path:"/token",method:"POST",body:e,secure:!0,type:s.Json,format:"json",...t}),tokenControllerFindAll:(e,t={})=>this.request({path:"/token",method:"GET",query:e,secure:!0,format:"json",...t}),tokenControllerFindOne:(e,t={})=>this.request({path:`/token/${e}`,method:"GET",secure:!0,format:"json",...t}),tokenControllerUpdate:(e,t,r={})=>this.request({path:`/token/${e}`,method:"PATCH",body:t,secure:!0,type:s.Json,format:"json",...r}),tokenControllerRemove:(e,t={})=>this.request({path:`/token/${e}`,method:"DELETE",secure:!0,format:"json",...t})});a(this,"credential",{credentialControllerCreate:(e,t={})=>this.request({path:"/credential",method:"POST",body:e,secure:!0,type:s.Json,format:"json",...t}),credentialControllerFindAll:(e,t={})=>this.request({path:"/credential",method:"GET",query:e,secure:!0,format:"json",...t}),credentialControllerFindOne:(e,t={})=>this.request({path:`/credential/${e}`,method:"GET",secure:!0,format:"json",...t}),credentialControllerUpdate:(e,t,r={})=>this.request({path:`/credential/${e}`,method:"PATCH",body:t,secure:!0,type:s.Json,format:"json",...r}),credentialControllerRemove:(e,t={})=>this.request({path:`/credential/${e}`,method:"DELETE",secure:!0,format:"json",...t}),credentialControllerGenerateSession:(e,t={})=>this.request({path:"/credential/session",method:"POST",body:e,secure:!0,type:s.Json,format:"json",...t}),credentialControllerHandleWebhook:(e,t={})=>this.request({path:"/credential/webhook",method:"POST",body:e,type:s.Json,...t}),credentialControllerTriggerCredentialAction:(e,t={})=>this.request({path:"/credential/trigger",method:"POST",body:e,secure:!0,type:s.Json,...t})});a(this,"template",{templateControllerCreate:(e,t={})=>this.request({path:"/template",method:"POST",body:e,secure:!0,type:s.Json,format:"json",...t}),templateControllerFindAll:(e,t={})=>this.request({path:"/template",method:"GET",query:e,secure:!0,format:"json",...t}),templateControllerFindAllPinned:(e={})=>this.request({path:"/template/pinned",method:"GET",secure:!0,format:"json",...e}),templateControllerFindOne:(e,t={})=>this.request({path:`/template/${e}`,method:"GET",secure:!0,format:"json",...t}),templateControllerUpdate:(e,t,r={})=>this.request({path:`/template/${e}`,method:"PATCH",body:t,secure:!0,type:s.Json,format:"json",...r}),templateControllerRemove:(e,t={})=>this.request({path:`/template/${e}`,method:"DELETE",secure:!0,format:"json",...t})});a(this,"voiceLibrary",{voiceLibraryControllerVoiceGetByProvider:(e,t,r={})=>this.request({path:`/voice-library/${e}`,method:"GET",query:t,secure:!0,format:"json",...r}),voiceLibraryControllerVoiceGetAccentsByProvider:(e,t={})=>this.request({path:`/voice-library/${e}/accents`,method:"GET",secure:!0,format:"json",...t}),voiceLibraryControllerVoiceLibrarySyncByProvider:(e,t={})=>this.request({path:`/voice-library/sync/${e}`,method:"POST",secure:!0,format:"json",...t}),voiceLibraryControllerVoiceLibrarySyncDefaultVoices:(e,t={})=>this.request({path:"/voice-library/sync",method:"POST",body:e,secure:!0,type:s.Json,format:"json",...t}),voiceLibraryControllerVoiceLibraryCreateSesameVoice:(e,t={})=>this.request({path:"/voice-library/create-sesame-voice",method:"POST",body:e,secure:!0,type:s.Json,...t})});a(this,"provider",{providerControllerGetWorkflows:(e,t,r={})=>this.request({path:`/${e}/workflows`,method:"GET",query:t,secure:!0,format:"json",...r}),providerControllerGetWorkflowTriggerHook:(e,t,r={})=>this.request({path:`/${e}/workflows/${t}/hooks`,method:"GET",secure:!0,format:"json",...r}),providerControllerGetLocations:(e,t={})=>this.request({path:`/${e}/locations`,method:"GET",secure:!0,format:"json",...t}),voiceProviderControllerSearchVoices:(e,t,r={})=>this.request({path:`/${e}/voices/search`,method:"GET",query:t,secure:!0,format:"json",...r}),voiceProviderControllerSearchVoice:(e,t,r={})=>this.request({path:`/${e}/voice/search`,method:"GET",query:t,secure:!0,format:"json",...r}),voiceProviderControllerAddVoices:(e,t,r={})=>this.request({path:`/${e}/voices/add`,method:"POST",body:t,secure:!0,type:s.Json,format:"json",...r}),voiceProviderControllerAddVoice:(e,t,r={})=>this.request({path:`/${e}/voice/add`,method:"POST",body:t,secure:!0,type:s.Json,format:"json",...r})});a(this,"v11Labs",{voiceProviderControllerCloneVoices:(e,t={})=>this.request({path:"/11labs/voice/clone",method:"POST",body:e,secure:!0,type:s.FormData,...t})})}}f.Api=G;Object.defineProperty(T,"__esModule",{value:!0});T.client=void 0;const D=f,F=new D.Api({baseUrl:"https://api.vapi.ai",baseApiParams:{secure:!0},securityWorker:async i=>{if(i)return{headers:{Authorization:`Bearer ${i}`}}}});T.client=F;var $=v&&v.__importDefault||function(i){return i&&i.__esModule?i:{default:i}};Object.defineProperty(S,"__esModule",{value:!0});const J=$(w),L=$(k),j=T;async function R(i,o){i.muted=!1,i.autoplay=!0,o!=null&&(i.srcObject=new MediaStream([o]),await i.play())}async function U(i,o){const e=document.createElement("audio");return e.dataset.participantId=o,document.body.appendChild(e),await R(e,i),e}function _(i){const o=document.querySelector(`audio[data-participant-id="${i}"]`);o==null||o.remove()}function H(i,o,e,t){i.participant.local||o.updateParticipant(i.participant.session_id,{setSubscribedTracks:{audio:!0,video:e||t}})}class M extends L.default{on(o,e){return super.on(o,e),this}once(o,e){return super.once(o,e),this}emit(o,...e){return super.emit(o,...e)}removeListener(o,e){return super.removeListener(o,e),this}removeAllListeners(o){return super.removeAllListeners(o),this}}class V extends M{constructor(e,t,r,l){super();a(this,"started",!1);a(this,"call",null);a(this,"speakingTimeout",null);a(this,"dailyCallConfig",{});a(this,"dailyCallObject",{});a(this,"hasEmittedCallEndedStatus",!1);j.client.baseUrl=t??"https://api.vapi.ai",j.client.setSecurityData(e),this.dailyCallConfig=r??{},this.dailyCallObject=l??{}}cleanup(){var e;this.started=!1,this.hasEmittedCallEndedStatus=!1,(e=this.call)==null||e.destroy(),this.call=null,this.speakingTimeout=null}isMobileDevice(){if(typeof navigator>"u")return!1;const e=navigator.userAgent;return/android|iphone|ipad|ipod|iemobile|blackberry|bada/i.test(e.toLowerCase())}async sleep(e){return new Promise(t=>setTimeout(t,e))}async start(e,t,r,l){var c,C,m,q;if(!e&&!r&&!l)throw new Error("Assistant or Squad or Workflow must be provided.");if(this.started)return null;this.started=!0;try{const u=(await j.client.call.callControllerCreateWebCall({assistant:typeof e=="string"?void 0:e,assistantId:typeof e=="string"?e:void 0,assistantOverrides:t,squad:typeof r=="string"?void 0:r,squadId:typeof r=="string"?r:void 0,workflow:typeof l=="string"?void 0:l,workflowId:typeof l=="string"?l:void 0})).data;this.call&&this.cleanup();const p=((c=u==null?void 0:u.artifactPlan)==null?void 0:c.videoRecordingEnabled)??!1,b=((m=(C=u==null?void 0:u.assistant)==null?void 0:C.voice)==null?void 0:m.provider)==="tavus";if(this.call=J.default.createCallObject({audioSource:this.dailyCallObject.audioSource??!0,videoSource:this.dailyCallObject.videoSource??p,dailyConfig:this.dailyCallConfig}),(q=this.call.iframe())==null||q.style.setProperty("display","none"),this.call.on("left-meeting",()=>{var n;this.emit("call-end"),this.hasEmittedCallEndedStatus||(this.emit("message",{type:"status-update",status:"ended",endedReason:"customer-ended-call"}),this.hasEmittedCallEndedStatus=!0),p&&((n=this.call)==null||n.stopRecording()),this.cleanup()}),this.call.on("error",n=>{var d;this.emit("error",n),p&&((d=this.call)==null||d.stopRecording())}),this.call.on("camera-error",n=>{this.emit("error",n)}),this.call.on("track-started",async n=>{var d,y,h;!n||!n.participant||(d=n.participant)!=null&&d.local||((y=n.participant)==null?void 0:y.user_name)==="Vapi Speaker"&&(n.track.kind==="video"&&this.emit("video",n.track),n.track.kind==="audio"&&await U(n.track,n.participant.session_id),(h=this.call)==null||h.sendAppMessage("playable"))}),this.call.on("participant-joined",n=>{!n||!this.call||H(n,this.call,p,b)}),this.call.on("participant-updated",n=>{n&&this.emit("daily-participant-updated",n.participant)}),this.call.on("participant-left",n=>{n&&_(n.participant.session_id)}),this.isMobileDevice()&&await this.sleep(1e3),await this.call.join({url:u.webCallUrl,subscribeToTracksAutomatically:!1}),p){const n=new Date().getTime();this.call.startRecording({width:1280,height:720,backgroundColor:"#FF1F2D3D",layout:{preset:"default"}}),this.call.on("recording-started",()=>{this.send({type:"control",control:"say-first-message",videoRecordingStartDelaySeconds:(new Date().getTime()-n)/1e3})})}return this.call.startRemoteParticipantsAudioLevelObserver(100),this.call.on("remote-participants-audio-level",n=>{n&&this.handleRemoteParticipantsAudioLevel(n)}),this.call.on("app-message",n=>this.onAppMessage(n)),this.call.on("nonfatal-error",n=>{var d;(n==null?void 0:n.type)==="audio-processor-error"&&((d=this.call)==null||d.updateInputSettings({audio:{processor:{type:"none"}}}).then(()=>{var y;(y=this.call)==null||y.setLocalAudio(!0)}))}),this.call.updateInputSettings({audio:{processor:{type:"noise-cancellation"}}}),u}catch(u){return console.error(u),this.emit("error",u),this.cleanup(),null}}onAppMessage(e){if(e)try{if(e.data==="listening")return this.emit("call-start");try{const t=JSON.parse(e.data);this.emit("message",t),t&&"type"in t&&"status"in t&&t.type==="status-update"&&t.status==="ended"&&(this.hasEmittedCallEndedStatus=!0)}catch(t){console.log("Error parsing message data: ",t)}}catch(t){console.error(t)}}handleRemoteParticipantsAudioLevel(e){const t=Object.values(e.participantsAudioLevel).reduce((l,c)=>l+c,0);this.emit("volume-level",Math.min(1,t/.15)),t>.01&&(this.speakingTimeout?(clearTimeout(this.speakingTimeout),this.speakingTimeout=null):this.emit("speech-start"),this.speakingTimeout=setTimeout(()=>{this.emit("speech-end"),this.speakingTimeout=null},1e3))}stop(){var e;this.started=!1,(e=this.call)==null||e.destroy(),this.call=null}send(e){var t;(t=this.call)==null||t.sendAppMessage(JSON.stringify(e))}setMuted(e){if(!this.call)throw new Error("Call object is not available.");this.call.setLocalAudio(!e)}isMuted(){return this.call?this.call.localAudio()===!1:!1}say(e,t,r){this.send({type:"say",message:e,endCallAfterSpoken:t,interruptionsEnabled:r??!1})}setInputDevicesAsync(e){var t;(t=this.call)==null||t.setInputDevicesAsync(e)}async increaseMicLevel(e){if(!this.call)throw new Error("Call object is not available.");try{const t=await navigator.mediaDevices.getUserMedia({audio:!0}),r=new AudioContext,l=r.createMediaStreamSource(t),c=r.createGain();c.gain.value=e,l.connect(c);const C=r.createMediaStreamDestination();c.connect(C);const[m]=C.stream.getAudioTracks();await this.call.setInputDevicesAsync({audioSource:m})}catch(t){console.error("Error adjusting microphone level:",t)}}setOutputDeviceAsync(e){var t;(t=this.call)==null||t.setOutputDeviceAsync(e)}getDailyCallObject(){return this.call}startScreenSharing(e,t){var r;(r=this.call)==null||r.startScreenShare({displayMediaOptions:e,screenVideoSendSettings:t})}stopScreenSharing(){var e;(e=this.call)==null||e.stopScreenShare()}}var x=S.default=V;export{x as _};
