/**
 * @remix-run/router v1.23.0
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */function c(){return c=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e},c.apply(this,arguments)}var d;(function(e){e.Pop="POP",e.Push="PUSH",e.Replace="REPLACE"})(d||(d={}));function u(e,n){if(e===!1||e===null||typeof e>"u")throw new Error(n)}function g(e){let n={};if(e){let t=e.indexOf("#");t>=0&&(n.hash=e.substr(t),e=e.substr(0,t));let r=e.indexOf("?");r>=0&&(n.search=e.substr(r),e=e.substr(0,r)),e&&(n.pathname=e)}return n}var m;(function(e){e.data="data",e.deferred="deferred",e.redirect="redirect",e.error="error"})(m||(m={}));function b(e,n){n===void 0&&(n="/");let{pathname:t,search:r="",hash:a=""}=typeof e=="string"?g(e):e;return{pathname:t?t.startsWith("/")?t:y(t,n):n,search:x(r),hash:O(a)}}function y(e,n){let t=n.replace(/\/+$/,"").split("/");return e.split("/").forEach(a=>{a===".."?t.length>1&&t.pop():a!=="."&&t.push(a)}),t.length>1?t.join("/"):"/"}function p(e,n,t,r){return"Cannot include a '"+e+"' character in a manually specified "+("`to."+n+"` field ["+JSON.stringify(r)+"].  Please separate it out to the ")+("`to."+t+"` field. Alternatively you may provide the full path as ")+'a string in <Link to="..."> and the router will parse it for you.'}function j(e){return e.filter((n,t)=>t===0||n.route.path&&n.route.path.length>0)}function E(e,n){let t=j(e);return n?t.map((r,a)=>a===t.length-1?r.pathname:r.pathnameBase):t.map(r=>r.pathnameBase)}function W(e,n,t,r){r===void 0&&(r=!1);let a;typeof e=="string"?a=g(e):(a=c({},e),u(!a.pathname||!a.pathname.includes("?"),p("?","pathname","search",a)),u(!a.pathname||!a.pathname.includes("#"),p("#","pathname","hash",a)),u(!a.search||!a.search.includes("#"),p("#","search","hash",a)));let s=e===""||a.pathname==="",i=s?"/":a.pathname,l;if(i==null)l=t;else{let o=n.length-1;if(!r&&i.startsWith("..")){let f=i.split("/");for(;f[0]==="..";)f.shift(),o-=1;a.pathname=f.join("/")}l=o>=0?n[o]:"/"}let h=b(a,l),P=i&&i!=="/"&&i.endsWith("/"),S=(s||i===".")&&t.endsWith("/");return!h.pathname.endsWith("/")&&(P||S)&&(h.pathname+="/"),h}const M=e=>e.join("/").replace(/\/\/+/g,"/"),x=e=>!e||e==="?"?"":e.startsWith("?")?e:"?"+e,O=e=>!e||e==="#"?"":e.startsWith("#")?e:"#"+e,v=["post","put","patch","delete"];new Set(v);const w=["get",...v];new Set(w);export{E as g,u as i,M as j,W as r};
